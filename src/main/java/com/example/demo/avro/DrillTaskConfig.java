/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.demo.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DrillTaskConfig extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8863899399845077781L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DrillTaskConfig\",\"namespace\":\"com.example.demo.avro\",\"fields\":[{\"name\":\"taskId\",\"type\":\"string\"},{\"name\":\"projectId\",\"type\":\"string\"},{\"name\":\"scenarioId\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"string\"},{\"name\":\"userID\",\"type\":\"string\"},{\"name\":\"devices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Device\",\"fields\":[{\"name\":\"vmId\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"address\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}]}}},{\"name\":\"links\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DrillTaskConfig> ENCODER =
      new BinaryMessageEncoder<DrillTaskConfig>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DrillTaskConfig> DECODER =
      new BinaryMessageDecoder<DrillTaskConfig>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<DrillTaskConfig> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<DrillTaskConfig> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DrillTaskConfig>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this DrillTaskConfig to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a DrillTaskConfig from a ByteBuffer. */
  public static DrillTaskConfig fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence taskId;
  @Deprecated public java.lang.CharSequence projectId;
  @Deprecated public java.lang.CharSequence scenarioId;
  @Deprecated public java.lang.CharSequence date;
  @Deprecated public java.lang.CharSequence userID;
  @Deprecated public java.util.List<com.example.demo.avro.Device> devices;
  @Deprecated public java.util.List<java.lang.CharSequence> links;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DrillTaskConfig() {}

  /**
   * All-args constructor.
   * @param taskId The new value for taskId
   * @param projectId The new value for projectId
   * @param scenarioId The new value for scenarioId
   * @param date The new value for date
   * @param userID The new value for userID
   * @param devices The new value for devices
   * @param links The new value for links
   */
  public DrillTaskConfig(java.lang.CharSequence taskId, java.lang.CharSequence projectId, java.lang.CharSequence scenarioId, java.lang.CharSequence date, java.lang.CharSequence userID, java.util.List<com.example.demo.avro.Device> devices, java.util.List<java.lang.CharSequence> links) {
    this.taskId = taskId;
    this.projectId = projectId;
    this.scenarioId = scenarioId;
    this.date = date;
    this.userID = userID;
    this.devices = devices;
    this.links = links;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return taskId;
    case 1: return projectId;
    case 2: return scenarioId;
    case 3: return date;
    case 4: return userID;
    case 5: return devices;
    case 6: return links;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: taskId = (java.lang.CharSequence)value$; break;
    case 1: projectId = (java.lang.CharSequence)value$; break;
    case 2: scenarioId = (java.lang.CharSequence)value$; break;
    case 3: date = (java.lang.CharSequence)value$; break;
    case 4: userID = (java.lang.CharSequence)value$; break;
    case 5: devices = (java.util.List<com.example.demo.avro.Device>)value$; break;
    case 6: links = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'taskId' field.
   * @return The value of the 'taskId' field.
   */
  public java.lang.CharSequence getTaskId() {
    return taskId;
  }

  /**
   * Sets the value of the 'taskId' field.
   * @param value the value to set.
   */
  public void setTaskId(java.lang.CharSequence value) {
    this.taskId = value;
  }

  /**
   * Gets the value of the 'projectId' field.
   * @return The value of the 'projectId' field.
   */
  public java.lang.CharSequence getProjectId() {
    return projectId;
  }

  /**
   * Sets the value of the 'projectId' field.
   * @param value the value to set.
   */
  public void setProjectId(java.lang.CharSequence value) {
    this.projectId = value;
  }

  /**
   * Gets the value of the 'scenarioId' field.
   * @return The value of the 'scenarioId' field.
   */
  public java.lang.CharSequence getScenarioId() {
    return scenarioId;
  }

  /**
   * Sets the value of the 'scenarioId' field.
   * @param value the value to set.
   */
  public void setScenarioId(java.lang.CharSequence value) {
    this.scenarioId = value;
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.lang.CharSequence getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.CharSequence value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'userID' field.
   * @return The value of the 'userID' field.
   */
  public java.lang.CharSequence getUserID() {
    return userID;
  }

  /**
   * Sets the value of the 'userID' field.
   * @param value the value to set.
   */
  public void setUserID(java.lang.CharSequence value) {
    this.userID = value;
  }

  /**
   * Gets the value of the 'devices' field.
   * @return The value of the 'devices' field.
   */
  public java.util.List<com.example.demo.avro.Device> getDevices() {
    return devices;
  }

  /**
   * Sets the value of the 'devices' field.
   * @param value the value to set.
   */
  public void setDevices(java.util.List<com.example.demo.avro.Device> value) {
    this.devices = value;
  }

  /**
   * Gets the value of the 'links' field.
   * @return The value of the 'links' field.
   */
  public java.util.List<java.lang.CharSequence> getLinks() {
    return links;
  }

  /**
   * Sets the value of the 'links' field.
   * @param value the value to set.
   */
  public void setLinks(java.util.List<java.lang.CharSequence> value) {
    this.links = value;
  }

  /**
   * Creates a new DrillTaskConfig RecordBuilder.
   * @return A new DrillTaskConfig RecordBuilder
   */
  public static com.example.demo.avro.DrillTaskConfig.Builder newBuilder() {
    return new com.example.demo.avro.DrillTaskConfig.Builder();
  }

  /**
   * Creates a new DrillTaskConfig RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DrillTaskConfig RecordBuilder
   */
  public static com.example.demo.avro.DrillTaskConfig.Builder newBuilder(com.example.demo.avro.DrillTaskConfig.Builder other) {
    return new com.example.demo.avro.DrillTaskConfig.Builder(other);
  }

  /**
   * Creates a new DrillTaskConfig RecordBuilder by copying an existing DrillTaskConfig instance.
   * @param other The existing instance to copy.
   * @return A new DrillTaskConfig RecordBuilder
   */
  public static com.example.demo.avro.DrillTaskConfig.Builder newBuilder(com.example.demo.avro.DrillTaskConfig other) {
    return new com.example.demo.avro.DrillTaskConfig.Builder(other);
  }

  /**
   * RecordBuilder for DrillTaskConfig instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DrillTaskConfig>
    implements org.apache.avro.data.RecordBuilder<DrillTaskConfig> {

    private java.lang.CharSequence taskId;
    private java.lang.CharSequence projectId;
    private java.lang.CharSequence scenarioId;
    private java.lang.CharSequence date;
    private java.lang.CharSequence userID;
    private java.util.List<com.example.demo.avro.Device> devices;
    private java.util.List<java.lang.CharSequence> links;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.demo.avro.DrillTaskConfig.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.taskId)) {
        this.taskId = data().deepCopy(fields()[0].schema(), other.taskId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.projectId)) {
        this.projectId = data().deepCopy(fields()[1].schema(), other.projectId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.scenarioId)) {
        this.scenarioId = data().deepCopy(fields()[2].schema(), other.scenarioId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.date)) {
        this.date = data().deepCopy(fields()[3].schema(), other.date);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.userID)) {
        this.userID = data().deepCopy(fields()[4].schema(), other.userID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.devices)) {
        this.devices = data().deepCopy(fields()[5].schema(), other.devices);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.links)) {
        this.links = data().deepCopy(fields()[6].schema(), other.links);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing DrillTaskConfig instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.demo.avro.DrillTaskConfig other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.taskId)) {
        this.taskId = data().deepCopy(fields()[0].schema(), other.taskId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.projectId)) {
        this.projectId = data().deepCopy(fields()[1].schema(), other.projectId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.scenarioId)) {
        this.scenarioId = data().deepCopy(fields()[2].schema(), other.scenarioId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.date)) {
        this.date = data().deepCopy(fields()[3].schema(), other.date);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.userID)) {
        this.userID = data().deepCopy(fields()[4].schema(), other.userID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.devices)) {
        this.devices = data().deepCopy(fields()[5].schema(), other.devices);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.links)) {
        this.links = data().deepCopy(fields()[6].schema(), other.links);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'taskId' field.
      * @return The value.
      */
    public java.lang.CharSequence getTaskId() {
      return taskId;
    }

    /**
      * Sets the value of the 'taskId' field.
      * @param value The value of 'taskId'.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder setTaskId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.taskId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'taskId' field has been set.
      * @return True if the 'taskId' field has been set, false otherwise.
      */
    public boolean hasTaskId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'taskId' field.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder clearTaskId() {
      taskId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'projectId' field.
      * @return The value.
      */
    public java.lang.CharSequence getProjectId() {
      return projectId;
    }

    /**
      * Sets the value of the 'projectId' field.
      * @param value The value of 'projectId'.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder setProjectId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.projectId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'projectId' field has been set.
      * @return True if the 'projectId' field has been set, false otherwise.
      */
    public boolean hasProjectId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'projectId' field.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder clearProjectId() {
      projectId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'scenarioId' field.
      * @return The value.
      */
    public java.lang.CharSequence getScenarioId() {
      return scenarioId;
    }

    /**
      * Sets the value of the 'scenarioId' field.
      * @param value The value of 'scenarioId'.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder setScenarioId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.scenarioId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'scenarioId' field has been set.
      * @return True if the 'scenarioId' field has been set, false otherwise.
      */
    public boolean hasScenarioId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'scenarioId' field.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder clearScenarioId() {
      scenarioId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.lang.CharSequence getDate() {
      return date;
    }

    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder setDate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.date = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder clearDate() {
      date = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'userID' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserID() {
      return userID;
    }

    /**
      * Sets the value of the 'userID' field.
      * @param value The value of 'userID'.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder setUserID(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.userID = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'userID' field has been set.
      * @return True if the 'userID' field has been set, false otherwise.
      */
    public boolean hasUserID() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'userID' field.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder clearUserID() {
      userID = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'devices' field.
      * @return The value.
      */
    public java.util.List<com.example.demo.avro.Device> getDevices() {
      return devices;
    }

    /**
      * Sets the value of the 'devices' field.
      * @param value The value of 'devices'.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder setDevices(java.util.List<com.example.demo.avro.Device> value) {
      validate(fields()[5], value);
      this.devices = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'devices' field has been set.
      * @return True if the 'devices' field has been set, false otherwise.
      */
    public boolean hasDevices() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'devices' field.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder clearDevices() {
      devices = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'links' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getLinks() {
      return links;
    }

    /**
      * Sets the value of the 'links' field.
      * @param value The value of 'links'.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder setLinks(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[6], value);
      this.links = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'links' field has been set.
      * @return True if the 'links' field has been set, false otherwise.
      */
    public boolean hasLinks() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'links' field.
      * @return This builder.
      */
    public com.example.demo.avro.DrillTaskConfig.Builder clearLinks() {
      links = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DrillTaskConfig build() {
      try {
        DrillTaskConfig record = new DrillTaskConfig();
        record.taskId = fieldSetFlags()[0] ? this.taskId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.projectId = fieldSetFlags()[1] ? this.projectId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.scenarioId = fieldSetFlags()[2] ? this.scenarioId : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.date = fieldSetFlags()[3] ? this.date : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.userID = fieldSetFlags()[4] ? this.userID : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.devices = fieldSetFlags()[5] ? this.devices : (java.util.List<com.example.demo.avro.Device>) defaultValue(fields()[5]);
        record.links = fieldSetFlags()[6] ? this.links : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DrillTaskConfig>
    WRITER$ = (org.apache.avro.io.DatumWriter<DrillTaskConfig>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DrillTaskConfig>
    READER$ = (org.apache.avro.io.DatumReader<DrillTaskConfig>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
